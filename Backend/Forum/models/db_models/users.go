package db_models

import (
	"gorm.io/datatypes"
	"time"
)

// User is used to store the object of a user
type User struct {
	GormModel `json:"-"`
	Id        uint `json:"id" gorm:"primaryKey"`

	// public data

	Username       string         `json:"username" gorm:"size:32"`
	OldUsernames   datatypes.JSON `json:"oldUsernames"`
	UserGroups     datatypes.JSON `json:"userGroups"`
	JoinDate       time.Time      `json:"joinDate"`
	WalletAddress  string         `json:"walletAddress" gorm:"size:128"`
	Posts          int64          `json:"posts"`
	Threads        int64          `json:"threads"`
	MarketListings int64          `json:"marketListings"`
	Reputation     int64          `json:"reputation"`
	Vouches        int64          `json:"vouches"`
	Signature      string         `json:"signature"`
	Banned         bool           `json:"banned"`
	BanReason      string         `json:"banReason"`
	BanExpiry      time.Time      `json:"banExpiry"`
	Muted          bool           `json:"muted"`
	MuteReason     string         `json:"muteReason"`
	MuteExpiry     time.Time      `json:"muteExpiry"`
	DiscordID      string         `json:"discordID" gorm:"size:128"`
	DiscordTag     string         `json:"discordTag" gorm:"size:64"`
	Telegram       string         `json:"telegram" gorm:"size:64"`
	PictureLink    string         `json:"pictureLink"`
	VerifiedMark   bool           `json:"verifiedMark"`

	// hidden data

	Email          string    `json:"-" gorm:"size:64"`
	LastIP         string    `json:"-" gorm:"size:64"`
	LastLogin      time.Time `json:"-"`
	ChangeUsername bool      `json:"-"`
}

// UserCardInfo is sent with every thread or market
// listing and is generated by a function inside the database
// file that gets the info by the user ID
type UserCardInfo struct {
	Username     string `json:"username"`
	Signature    string `json:"signature"`
	VerifiedMark bool   `json:"verifiedMark"`
	PictureLink  string `json:"pictureLink"`
	Reputation   int64  `json:"reputation"`
	Vouches      int64  `json:"vouches"`
	JoinDate     string `json:"joinDate"`
}

// Vouches is used to store a vouch object for a user
type Vouches struct {
	GormModel    `json:"-"`
	Id           uint      `json:"id" gorm:"primaryKey"`
	SenderId     uint      `json:"sender_id"`
	RecipientId  uint      `json:"recipient_id"`
	Message      string    `json:"message"`
	DealAmount   int       `json:"dealAmount"`
	ShowAmount   bool      `json:"showAmount"`
	CreationDate time.Time `json:"creationDate"`
}

// Reputation is used to store a feedback object for a user
type Reputation struct {
	GormModel    `json:"-"`
	Id           uint      `json:"id" gorm:"primaryKey"`
	SenderId     uint      `json:"sender_id"`
	RecipientId  uint      `json:"recipient_id"`
	Message      string    `json:"message"`
	Modifier     int       `json:"modifier"`
	CreationDate time.Time `json:"creationDate"`
}
